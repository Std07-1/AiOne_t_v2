# UI/ui_consumer_entry.py

import asyncio
import logging
from UI.ui_consumer import UI_Consumer

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    datefmt="%Y-%m-%d %H:%M:%S",
)
logger = logging.getLogger("ui_consumer")


async def main():
    # –î–æ–¥–∞—î–º–æ low_atr_threshold —è–∫ —É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ñ UI_Consumer
    ui = UI_Consumer(
        vol_z_threshold=2.5, low_atr_threshold=0.005  # –î–æ–¥–∞–Ω–æ –Ω–æ–≤–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä
    )

    logger.info("üöÄ –ó–∞–ø—É—Å–∫ UI Consumer –∑ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–º —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º...")

    # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    await ui.redis_consumer(
        redis_url="redis://localhost:6379/0",
        channel="asset_state_update",
        refresh_rate=0.8,  # –û–ø—Ç–∏–º–∞–ª—å–Ω–∞ —á–∞—Å—Ç–æ—Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        loading_delay=1.5,  # –°–∫–æ—Ä–æ—á–µ–Ω–∏–π —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        smooth_delay=0.05,  # –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç—ñ
    )


if __name__ == "__main__":
    asyncio.run(main())
